name: Stress builds

on:
  workflow_dispatch:

jobs:
  stress_ub:
    runs-on: ${{ matrix.os }}
    strategy:
            fail-fast: false
            matrix:
                    os: [ubuntu-18.04]
                    build_type: [release, debugoptimized]

    steps:
    - name: Free space
      run: |
              echo "=============================================================================="
              echo "Freeing up disk space on CI system"
              echo "=============================================================================="

              echo "Listing 100 largest packages"
              dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 100
              df -h
              echo "Removing large packages"
              sudo apt-get remove -y '^ghc-8.*'
              sudo apt-get remove -y '^dotnet-.*'
              sudo apt-get remove -y '^llvm-.*'
              sudo apt-get remove -y 'php.*'
              sudo apt-get remove -y azure-cli google-cloud-sdk hhvm google-chrome-stable firefox powershell mono-devel
              sudo apt-get autoremove -y
              sudo apt-get clean
              df -h
              echo "Removing large directories"
              # deleting 15GB
              rm -rf /usr/share/dotnet/
              df -h

    - name: Dump info
      run: |
              lsblk -o NAME,MODEL
              cat /proc/swaps

    - name: Install dependencies
      run: |
              sudo apt-get update
              sudo apt-get install build-essential libbsd-dev pkg-config openjdk-8-jdk libmicrohttpd-dev liburcu-dev libyaml-dev liblz4-dev libcurl4-openssl-dev
              sudo apt-get install libmongoc-1.0-0 libbson-1.0-0 libssl-dev libsasl2-dev
              python3 -m pip install --user setuptools_rust wheel
              python3 -m pip install --user poetry
    - uses: actions/checkout@v2

    - name: Setup python environment to run branch
      run: |
              poetry install

    - name: Create tests-dir
      run: |
              sudo mkdir -p /mnt/hse-tests

    - name: Build setup with YCSB, tools and configs
      run: |
              sed -i.bak "s,ssh://git@bitbucket.micron.com/hse/hse-python.git,https://${{ secrets.GH_TOKEN }}@github.com/bhaveshvasandani/hse-python.git,g" subprojects/hse-python.wrap
              sudo poetry run meson builddir -Dbuildtype=${{ matrix.build_type }} -Dycsb=true -Dinstall-tools=true -Dinstall-configs=true -Dwrap_mode=forcefallback -Dtests-dir=/mnt/hse-tests

    - name: Run tests
      run: |
              sudo poetry run meson test -C builddir --suite=stress --print-errorlogs --no-stdsplit

    - uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: build-artifact-ubuntu-${{ matrix.build_type }}
        path: |
                builddir/meson-logs/
                /var/log/syslog

